name: Medium Clone Project CI/CD
on:
  workflow_dispatch:
    inputs:
      tests_path:
        description: 'Tests path'
        required: false
        default: ''
      github_feedback_id:
        description: 'Github feedback id'
        required: true

jobs:
  deploy:
    name: Deploy and run tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Clean environment
        run: |
          rm -rf original-repo
          rm -rf forked-repo

      - name: Send a signal to the webhook that the job has started.
        run: |
          curl -X PUT --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-feedbacks/${{ github.event.inputs.github_feedback_id }}/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'github_username=${{ github.actor }}' \
          --form 'action_run_id=${{ github.run_id }}' \
          --form 'status=started'
          
          curl -X 'POST' --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-workflows/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'github_username=${{ github.actor }}' \
          --form 'github_action_run_id=${{ github.run_id }}' \
          --form 'action_status=started' \
          --form 'clean_env_step=started'

      - name: Checkout original repository
        uses: actions/checkout@v3
        with:
          repository: Mohirdevelopers/medium-clone-backend-initial
          path: original-repo
          ref: main
          fetch-depth: 0

      - name: Checkout forked repository
        uses: actions/checkout@v3
        with:
          path: forked-repo
          ref: main
          fetch-depth: 0

      - name: Move tests folder from original to forked
        run: |
          rm -rf forked-repo/tests
          mv original-repo/tests forked-repo/
          rm -rf original-repo

      - name: Create .env file from .env.example
        working-directory: forked-repo
        run: cp .env.example .env

      - name: Set environment variables
        working-directory: forked-repo
        run: export $(grep -v '^#' .env | xargs)

      - name: Installing Deps Status
        run: |
          curl -X 'POST' --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-workflows/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'github_username=${{ github.actor }}' \
          --form 'github_action_run_id=${{ github.run_id }}' \
          --form 'clean_env_step=completed' \
          --form 'install_dependencies_step=started'

      - name: Build and run application via docker compose
        working-directory: forked-repo
        run: |
          docker compose up -d --build
          sleep 5s
          docker ps -a
          sleep 5s
          docker logs medium_app

      - name: Running Project Status
        run: |
          curl -X 'POST' --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-workflows/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'github_username=${{ github.actor }}' \
          --form 'github_action_run_id=${{ github.run_id }}' \
          --form 'install_dependencies_step=completed' \
          --form 'application_health_step=started'

      - name: Check application health
        run: |
          sleep 5s
          curl -v http://127.0.0.1:8000/health/

      - name: Application tests Status
        run: |
          curl -X 'POST' --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-workflows/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'github_username=${{ github.actor }}' \
          --form 'github_action_run_id=${{ github.run_id }}' \
          --form 'application_health_step=completed' \
          --form 'run_tests_step=started'

      - name: Run application tests via pytest
        working-directory: forked-repo
        run: docker compose exec medium_app pytest ${{ github.event.inputs.tests_path }} --cache-clear -vv --json-report --json-report-file=./reports/unittest-checker-report.json --json-report-indent=2
        continue-on-error: true

      - name: Upload created pytest report file as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: unittest-checker-artifact
          path: forked-repo/reports/unittest-checker-report.json

      - name: Send a signal to the webhook that the job has finished.
        if: always()
        run: |
          status=${{ job.status }}
          if [ "$status" == "success" ]; then
            status="completed"
          else
            status="failed"
          fi
          
          curl -X 'POST' --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-workflows/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'github_username=${{ github.actor }}' \
          --form 'github_action_run_id=${{ github.run_id }}' \
          --form 'run_tests_step=completed' \
          --form "action_status=$status"
          
          curl -X PUT --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-feedbacks/${{ github.event.inputs.github_feedback_id }}/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'github_username=${{ github.actor }}' \
          --form 'action_run_id=${{ github.run_id }}' \
          --form "status=$status"
